on:
  push

name: Build and deploy website

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build-images:
    name: Build images
    runs-on: ubuntu-latest
    steps:
      - name: Unzip files
        id: request
        uses: fjogeleit/http-request-action@v1
        with:
          url: ${{ secrets.WEBSITE }}/plik.html
          method: GET
      - name: Check response
        shell: bash
        run: |
          if [${{ steps.request.outputs.response }} = "ok"]; then
            exit 0
          else
            exit 1
          fi;
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install node deps
        run: npm install
      - name: Build images
        #run: node image-converter.mjs
        run: |
          mkdir assets/images
          touch assets/images/file.txt
      - uses: actions/upload-artifact@v4
        with:
          name: built-images
          path: assets/images

  build-website:
    name: Build website
    needs: build-images
    runs-on: ubuntu-latest
    steps:
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3'
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - uses: actions/checkout@v4
        with:
          submodules: 'true'
          token: ${{ secrets.CI_TOKEN }}
      - uses: actions/download-artifact@v4
        with:
          name: built-images
          path: assets/images
      - name: Install jekyll deps
        run: bundle install
      - name: Build website
        run: |
          npm install
          npm run build
      - name: Compress files
        run: |
          cd _site
          zip -r ../website.zip *
      - uses: actions/upload-artifact@v4
        with:
          name: built-website
          path: website.zip

  upload:
    name: Upload to FTP
    needs: build-website
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: built-website
      - name: Create PHP deploy script
        run: |
          touch deploy.php
          echo "<?php \$zip = new ZipArchive;if (\$zip->open('website.zip') === TRUE) {\$zip->extractTo('./');\$zip->close();echo 'ok';} unlink('.ftp-deploy-sync-state.json');unlink('website.zip');unlink(__FILE__);?>" > deploy.php
      - uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: ${{ secrets.FTP_HOST }}
          username: ${{ secrets.FTP_USER }}
          password: ${{ secrets.FTP_PASSWORD }}
      - name: Unzip files
        id: request
        uses: fjogeleit/http-request-action@v1
        with:
          url: ${{ secrets.WEBSITE }}/deploy.php
          method: GET
      - name: Check response
        run: >-
          if [${{ steps.request.outputs.response }} == "ok"];
          then
            exit 0;
          else
            exit 1;
          fi
